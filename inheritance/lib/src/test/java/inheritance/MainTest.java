/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package inheritance;

import org.junit.jupiter.api.Test;

import java.lang.reflect.Array;
import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;

class MainTest {
    Main classUnderTest = new Main();

    @Test void newInstanceToString() {
        Restaurant sample1=new Restaurant("alhawen",3,"$$");
        Restaurant sample2=new Restaurant("faheem",7,"$");
        Restaurant sample3=new Restaurant("shawerma",-1,"$$$");
        Restaurant sample4=new Restaurant("vegan",0,"$");

    }
    @Test void reviewConstructorTest() {
       Review reviewSample=new Review("motasem","nice decor",3);
    }
    @Test void addReviewMethodTest() {
        Restaurant sample1=new Restaurant("alhawen",3,"$$");
        sample1.addReview("hussien","recommanded",5);
        sample1.addReview("george","bad",2);
        sample1.addReview("fahed","not bad,need more improve",3);

    }
    @Test void shopClassTest() {
        String name="supermarket", description="nice",price_category="$";
        shop new_shop = new shop(name, description, price_category);

        assertEquals(name,new_shop.name);
        assertEquals(description,new_shop.description);
        assertEquals(price_category,new_shop.price_category);

        String result_expected=name+"-"+description+"-"+price_category;
        assertEquals(result_expected,new_shop.toString());

    }
    @Test void addReviewToShopClassTest() {
        shop new_shop=new shop("superMarket","have alot of materials for todays needs","$$");
        ArrayList excepted=new ArrayList();
  new_shop.addReview("motasem","not bad",3);
        excepted.add("motasem-not bad-3");
  new_shop.addReview("ahmad","need more improvments",2);
        excepted.add("ahmad-need more improvments-2");
  new_shop.addReview("mohammed","cool place",5);
        excepted.add("mohammed-cool place-5");
        assertEquals(excepted,new_shop.reviews);

}
    @Test void TheaterClassTest(){
        Theater new_theater=new Theater("ammanTheater");
        String excepted="[]";
        assertEquals(excepted,new_theater.toString());
        new_theater.addMovie("spiderman");
        excepted="[spiderman]";
        assertEquals(excepted,new_theater.toString());
        new_theater.addMovie("batman");
        excepted="[spiderman, batman]";
        assertEquals(excepted,new_theater.toString());
        new_theater.removeMovie("spiderman");
        excepted="[batman]";
        assertEquals(excepted,new_theater.toString());




    }
    @Test void addReviewToTheaterClassTest(){
        Theater new_theater=new Theater("ammanTheater");
        ArrayList excepted=new ArrayList();
        new_theater.addReview("motasem","nice place",4);
        excepted.add("motasem-nice place-4");
        new_theater.addReview("ahmad","what an impressive place",5);
        excepted.add("ahmad-what an impressive place-5");
        new_theater.addReview("mohammed","i dont like this type of place",1);
        excepted.add("mohammed-i dont like this type of place-1");
        assertEquals(excepted,new_theater.reviews);
    }
    @Test void addReviewToTheaterClassTestWithMovie(){
        Theater new_theater=new Theater("ammanTheater");
        ArrayList excepted=new ArrayList();
        new_theater.addReview("spiderman","motasem","nice movie",4);
        excepted.add("spiderman-motasem-nice movie-4");
        new_theater.addReview("batman","ahmad","what an impressive movie",5);
        excepted.add("batman-ahmad-what an impressive movie-5");
        new_theater.addReview("spiderman","mohammed","i dont like this type of movies",1);
        excepted.add("spiderman-mohammed-i dont like this type of movies-1");
        assertEquals(excepted,new_theater.reviews);
    }}